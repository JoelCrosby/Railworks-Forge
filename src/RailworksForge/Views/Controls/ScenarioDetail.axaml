<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:RailworksForge.ViewModels"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="1280" d:DesignHeight="720"
             x:Class="RailworksForge.Views.Controls.ScenarioDetail"
             x:DataType="vm:ScenarioDetailViewModel">

    <Design.DataContext>
        <vm:DesignScenarioDetailViewModel />
    </Design.DataContext>

    <DockPanel>

        <Grid Margin="12,12,12,0" DockPanel.Dock="Top" ColumnDefinitions="280,*" >
            <Grid.Styles>
                <Style Selector="StackPanel">
                    <Setter Property="Spacing" Value="4" />
                    <Setter Property="Margin" Value="0, 0, 0, 8" />
                </Style>

                <Style Selector="TextBlock">
                    <Setter Property="TextWrapping" Value="1" />
                    <Setter Property="LineSpacing" Value="1.8" />
                </Style>
            </Grid.Styles>

            <Border Margin="0,0,8,0" Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource SystemChromeDisabledHighColor}" Padding="12,8" CornerRadius="6">
                <StackPanel>
                    <StackPanel IsVisible="{Binding Scenario.Locomotive, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <TextBlock FontWeight="SemiBold" Text="Locomotive" />
                        <TextBlock Text="{Binding Scenario.Locomotive}" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding Scenario.StartLocation, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <TextBlock FontWeight="SemiBold" Text="Start Location" />
                        <TextBlock Text="{Binding Scenario.StartLocation}" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding Scenario.StartLocation, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <TextBlock FontWeight="SemiBold" Text="Scenario Type" />
                        <TextBlock Text="{Binding Scenario.ScenarioClass}" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding Scenario.StartLocation, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <TextBlock FontWeight="SemiBold" Text="Packaging Type" />
                        <TextBlock Text="{Binding Scenario.PackagingType}" />
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource SystemChromeDisabledHighColor}" Padding="12,8" CornerRadius="6">
                <StackPanel>
                    <StackPanel>
                        <TextBlock FontWeight="SemiBold" Text="Description" />
                        <TextBlock Text="{Binding Scenario.Description}" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding Scenario.Briefing, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <TextBlock FontWeight="SemiBold" Text="Briefing" />
                        <TextBlock Text="{Binding Scenario.Briefing}" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>

        <StackPanel DockPanel.Dock="Top" Margin="12" Orientation="Horizontal" Spacing="12">
            <Button Command="{Binding OpenInExplorerCommand}">Open In Explorer</Button>
            <Button Command="{Binding ExportBinXmlCommand}">Export Bin to XML</Button>
            <Button Command="{Binding ExportXmlBinCommand}">Convert XML to Bin</Button>
            <Button Command="{Binding ExtractScenariosCommand}">Extract Scenarios</Button>
        </StackPanel>

        <DataGrid DockPanel.Dock="Bottom"
                  ItemsSource="{Binding Scenario.Consists}"
                  IsReadOnly="True"
                  GridLinesVisibility="All"
                  SelectionMode="Single"
                  SelectedItem="{Binding SelectedConsist}"
                  DoubleTapped="DataGrid_OnDoubleTapped"
                  BorderThickness="0,1,0,0"
                  BorderBrush="{DynamicResource SystemChromeDisabledHighColor}"
        >

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id, Converter={StaticResource IdValueConverter}}" FontFamily="monospace" />
                <DataGridTextColumn Header="State" Binding="{Binding AcquisitionState}" />
                <DataGridTextColumn Header="Locomotive Author" Binding="{Binding LocoAuthor}" />
                <DataGridTextColumn Header="Locomotive Name" Binding="{Binding LocomotiveName}" />
                <DataGridTextColumn Header="Locomotive Class" Binding="{Binding LocoClass}" />
                <DataGridTextColumn Header="Service Name" Binding="{Binding ServiceName}" />
            </DataGrid.Columns>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Details" Command="{Binding ClickedConsistCommand}" />
                    <MenuItem Header="Save" Command="{Binding SaveConsistCommand}" />
                    <MenuItem Header="Replace" Command="{Binding ReplaceConsistCommand}"  />
                    <MenuItem Header="Delete" Command="{Binding DeleteConsistCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>

        </DataGrid>

    </DockPanel>

</UserControl>
